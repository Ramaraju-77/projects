//this is my time capsule dairy project code
//html code
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Time Capsule Diary</title>
  <link rel="stylesheet" href="style.css" />
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
  <div class="container">
    <h1><span class="capsule-icon">üï∞Ô∏è</span> Time Capsule Diary</h1>
    <form id="diaryForm">
      <label for="entry">Your Message</label>
      <textarea id="entry" placeholder="Write your message..." required></textarea>
      <label for="unlockDate">Unlock Date</label>
      <input type="date" id="unlockDate" required />
      <label for="unlockTime">Unlock Time</label>
      <input type="time" id="unlockTime" required />
      <label for="photo">Attach a Photo (optional)</label>
      <input type="file" id="photo" accept="image/*" />
      <button type="submit" class="primary-btn">Save Entry</button>
    </form>
    <div id="message"></div>
    <div id="capsule"></div>
    <button id="showEntriesBtn" class="secondary-btn">Show All My Capsules</button>
    <div id="allCapsules"></div>
  </div>
  <footer>
    <p>Made with <span style="color:#e25555;">‚ô•</span> for your future self</p>
  </footer>
  <script src="https://www.gstatic.com/firebasejs/8.10.1/firebase-app.js"></script>
  <script src="https://www.gstatic.com/firebasejs/8.10.1/firebase-firestore.js"></script>
  <script src="script.js"></script>
</body>
</html>
// css code
body {
  font-family: 'Roboto', sans-serif;
  background: linear-gradient(135deg, #e0c3fc 0%, #8ec5fc 100%);
  min-height: 100vh;
  margin: 0;
}

.container {
  max-width: 440px;
  margin: 3rem auto 2rem auto;
  background: rgba(255,255,255,0.95);
  padding: 2.7rem 2.2rem 2.2rem 2.2rem;
  border-radius: 22px;
  box-shadow: 0 8px 40px rgba(60,60,120,0.18);
  position: relative;
  animation: fadeIn 1.2s cubic-bezier(.39,.575,.56,1) both;
}

@keyframes fadeIn {
  0% { opacity: 0; transform: translateY(40px); }
  100% { opacity: 1; transform: translateY(0); }
}

h1 {
  text-align: center;
  font-weight: 900;
  color: #5a189a;
  margin-bottom: 2.2rem;
  letter-spacing: 1px;
}

.capsule-icon {
  font-size: 1.7em;
  vertical-align: middle;
}

label {
  display: block;
  margin-top: 1.3rem;
  margin-bottom: 0.4rem;
  font-weight: 600;
  color: #5a189a;
  letter-spacing: 0.5px;
}

textarea {
  width: 100%;
  min-height: 110px;
  border-radius: 10px;
  border: 1.5px solid #bfc6e0;
  padding: 1rem;
  font-size: 1.05rem;
  resize: vertical;
  background: #f7f8fa;
  transition: border 0.2s, box-shadow 0.2s;
  box-shadow: 0 1px 4px rgba(90,24,154,0.04);
}

textarea:focus, input:focus {
  outline: none;
  border: 2px solid #8ec5fc;
  box-shadow: 0 2px 8px rgba(90,24,154,0.08);
}

input[type="date"], input[type="file"], input[type="time"] {
  width: 100%;
  padding: 0.6rem;
  border-radius: 10px;
  border: 1.5px solid #bfc6e0;
  background: #f7f8fa;
  font-size: 1.05rem;
  margin-bottom: 0.2rem;
}

.primary-btn {
  margin-top: 1.7rem;
  width: 100%;
  background: linear-gradient(90deg, #8ec5fc 0%, #5a189a 100%);
  color: #fff;
  border: none;
  border-radius: 10px;
  padding: 1rem 0;
  font-size: 1.15rem;
  font-weight: 800;
  cursor: pointer;
  box-shadow: 0 2px 8px rgba(90,24,154,0.08);
  transition: background 0.2s, transform 0.2s;
}

.primary-btn:hover {
  background: linear-gradient(90deg, #5a189a 0%, #8ec5fc 100%);
  transform: translateY(-2px) scale(1.03);
}

.secondary-btn {
  margin-top: 2.2rem;
  width: 100%;
  background: #fff;
  color: #5a189a;
  border: 2px solid #8ec5fc;
  border-radius: 10px;
  padding: 0.8rem 0;
  font-size: 1.05rem;
  font-weight: 700;
  cursor: pointer;
  box-shadow: 0 1px 4px rgba(90,24,154,0.04);
  transition: background 0.2s, color 0.2s, border 0.2s, transform 0.2s;
}

.secondary-btn:hover {
  background: #8ec5fc;
  color: #fff;
  border: 2px solid #5a189a;
  transform: translateY(-1px) scale(1.02);
}

.delete-btn {
  background: linear-gradient(90deg, #ff5858 0%, #f09819 100%);
  color: #fff;
  border: none;
  border-radius: 8px;
  padding: 0.5rem 1.2rem;
  font-size: 1rem;
  font-weight: 600;
  margin-top: 1rem;
  margin-left: 0;
  cursor: pointer;
  box-shadow: 0 1px 4px rgba(255,88,88,0.10);
  transition: background 0.2s, transform 0.2s;
}

.delete-btn:hover {
  background: linear-gradient(90deg, #f09819 0%, #ff5858 100%);
  transform: scale(1.05);
}

img {
  max-width: 100%;
  margin-top: 1rem;
  border-radius: 10px;
  box-shadow: 0 2px 12px rgba(90,24,154,0.10);
}

#message {
  color: #2e7d32;
  margin-top: 1.2rem;
  text-align: center;
  font-weight: 600;
  font-size: 1.08rem;
}

.locked {
  color: #b00;
  font-weight: bold;
}

#capsule, #allCapsules {
  margin-top: 2.2rem;
}

#allCapsules > div {
  background: #f7f8fa;
  border-radius: 12px;
  box-shadow: 0 2px 8px rgba(90,24,154,0.06);
  padding: 1.1rem;
  margin-bottom: 1.3rem;
  border-left: 5px solid #8ec5fc;
}

footer {
  text-align: center;
  color: #888;
  font-size: 1.05rem;
  margin-bottom: 1.7rem;
  letter-spacing: 0.5px;
}

.share-btn {
  background: linear-gradient(90deg, #43e97b 0%, #38f9d7 100%);
  color: #fff;
  border: none;
  border-radius: 8px;
  padding: 0.5rem 1.2rem;
  font-size: 1rem;
  font-weight: 600;
  margin-top: 1rem;
  margin-left: 0.7rem;
  cursor: pointer;
  box-shadow: 0 1px 4px rgba(67,233,123,0.10);
  transition: background 0.2s, transform 0.2s;
}

.share-btn:hover {
  background: linear-gradient(90deg, #38f9d7 0%, #43e97b 100%);
  transform: scale(1.05);
}
//js code
// Initialize Firebase (v8 syntax)
var firebaseConfig = {
  apiKey: "AIzaSyC7hCH0cCbPLXyNtIGw-pHYWK7YJP_lipE",
  authDomain: "time-9317d.firebaseapp.com",
  projectId: "time-9317d",
  storageBucket: "time-9317d.firebasestorage.app",
  messagingSenderId: "617854968503",
  appId: "1:617854968503:web:8a02ccce7c704d413fe332",
  measurementId: "G-HGLRR43ZN3"
};
firebase.initializeApp(firebaseConfig);
var db = firebase.firestore();

const form = document.getElementById('diaryForm');
const messageDiv = document.getElementById('message');
const showEntriesBtn = document.getElementById('showEntriesBtn');
const allCapsulesDiv = document.getElementById('allCapsules');

form.addEventListener('submit', async e => {
  e.preventDefault();
  const entry = document.getElementById('entry').value;
  const unlockDate = document.getElementById('unlockDate').value;
  const unlockTime = document.getElementById('unlockTime').value;
  const photo = document.getElementById('photo').files[0];

  let photoData = '';
  if (photo) {
    photoData = await toBase64(photo);
  }

  // Save to Firestore (no recipient email)
  await db.collection("capsules").add({
    entry,
    unlockDate: new Date(`${unlockDate}T${unlockTime}`),
    photoData,
    createdAt: new Date(),
    sent: false
  });
  messageDiv.textContent = 'Entry saved!';
  form.reset();
});

showEntriesBtn.addEventListener('click', async () => {
  allCapsulesDiv.innerHTML = '<p>Loading...</p>';
  const snapshot = await db.collection('capsules').orderBy('unlockDate', 'desc').get();
  if (snapshot.empty) {
    allCapsulesDiv.innerHTML = '<p>No capsules found.</p>';
    return;
  }
  allCapsulesDiv.innerHTML = Array.from(snapshot.docs).map((doc, i) => {
    const data = doc.data();
    const unlock = new Date(data.unlockDate.seconds ? data.unlockDate.seconds * 1000 : data.unlockDate);
    const now = new Date();
    let deleteBtn = `<button class='delete-btn' onclick='deleteCapsuleFirestore("${doc.id}")'>Delete</button>`;
    if (now >= unlock) {
      return `<div style="border-left:5px solid #8ec5fc; background:#f7f8fa; border-radius:12px; box-shadow:0 2px 8px rgba(90,24,154,0.06); padding:1.1rem; margin-bottom:1.3rem;">
        <strong>Unlocked Capsule #${i+1}</strong><br/>
        <p>${data.entry}</p>
        <div><small>Unlock Date: ${unlock.toLocaleString()}</small></div>
        ${data.photoData ? `<img src="${data.photoData}" alt="Photo" />` : ''}
        ${deleteBtn}
      </div>`;
    } else {
      return `<div style="border-left:5px solid #8ec5fc; background:#f7f8fa; border-radius:12px; box-shadow:0 2px 8px rgba(90,24,154,0.06); padding:1.1rem; margin-bottom:1.3rem;">
        <strong class="locked">Locked Capsule #${i+1}</strong><br/>
        <div>This entry will unlock on ${unlock.toLocaleString()}.</div>
        ${deleteBtn}
      </div>`;
    }
  }).join('');
});

window.deleteCapsuleFirestore = async function(id) {
  if (confirm('Are you sure you want to delete this capsule?')) {
    await db.collection('capsules').doc(id).delete();
    showEntriesBtn.click();
  }
}

function toBase64(file) {
  return new Promise((resolve, reject) => {
    const reader = new FileReader();
    reader.onload = e => resolve(e.target.result);
    reader.onerror = e => reject(e);
    reader.readAsDataURL(file);
  });
}

// Sound reminder for unlock time
const notifiedCapsules = new Set();
setInterval(async () => {
  const snapshot = await db.collection('capsules').get();
  const now = new Date();
  snapshot.forEach(doc => {
    const data = doc.data();
    const unlock = new Date(data.unlockDate.seconds ? data.unlockDate.seconds * 1000 : data.unlockDate);
    if (!notifiedCapsules.has(doc.id) && now >= unlock) {
      playReminderSound();
      alert('Your Time Capsule is unlocked!');
      notifiedCapsules.add(doc.id);
    }
  });
}, 10000);

function playReminderSound() {
  try {
    const ctx = new (window.AudioContext || window.webkitAudioContext)();
    const oscillator = ctx.createOscillator();
    oscillator.type = 'sine';
    oscillator.frequency.setValueAtTime(880, ctx.currentTime);
    oscillator.connect(ctx.destination);
    oscillator.start();
    setTimeout(() => {
      oscillator.stop();
      ctx.close();
    }, 500);
  } catch (e) {
    // Only show alert if sound cannot play at all
    alert('Your Time Capsule is unlocked! (Enable sound by interacting with the page)');
  }
}
